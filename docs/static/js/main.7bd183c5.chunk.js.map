{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGif.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","console","log","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGif","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACZC,mBAAS,IADG,mBACzCC,EADyC,KAC7BC,EAD6B,KAiBhD,OACE,0BAAMC,SAXa,SAACC,GACpBA,EAAEC,iBACFC,QAAQC,IAAI,gBAERN,EAAWO,OAAOC,OAAS,IAC7BV,GAAc,SAACW,GAAD,OAAWT,GAAX,mBAA0BS,OACxCR,EAAc,OAMd,2BAAOS,KAAK,OAAOC,MAAOX,EAAYY,SAhBjB,SAACT,GACxBF,EAAcE,EAAEU,OAAOF,Y,uBCPdG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDAEyBC,UAAUH,GAFnC,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVnB,kBAcZM,GAdY,4CAAH,sDCEPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACvC,OACE,yBAAKc,UAAU,yCACb,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCFGO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDd,SAACA,GAAc,IAAD,EACbhB,mBAAS,CACjCuB,KAAM,GACNa,SAAS,IAH4B,mBAChCC,EADgC,KACzBC,EADyB,KAiBvC,OAXAC,qBAAU,WACRxB,EAAQC,GAAUwB,MAAK,SAACC,GAEpBH,EAAS,CACPf,KAAMkB,EACNL,SAAS,SAId,CAACpB,IAEGqB,EDf2BK,CAAY1B,GAAhCa,EADyB,EAC/BN,KAAca,EADiB,EACjBA,QAEtB,OACE,oCACE,4BAAKpB,GACJoB,GAAY,uBAAGJ,UAAW,wCAAd,WACb,yBAAKA,UAAU,aACZH,EAAOJ,KAAI,SAACC,GAAD,OACV,kBAAC,EAAD,eAAaiB,IAAKjB,EAAIC,IAAQD,UEkBzBkB,EAxBM,WAAO,IAAD,EAEW5C,mBAAS,CAAC,iBAFrB,mBAElB6C,EAFkB,KAEN9C,EAFM,KAIzB,OACE,oCACE,4CACA,6BACA,kBAAC,EAAD,CAAaA,cAAiBA,IAE9B,4BAEE8C,EAAWpB,KAAI,SAACT,GAAD,OACb,kBAAC,EAAD,CACA2B,IAAO3B,EACPA,SAAYA,U,MCjBtB8B,IAASC,OAEL,kBAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.7bd183c5.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  const hadleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"Submit hecho\");\r\n\r\n    if (inputValue.trim().length > 2) {\r\n      setCategories((cats) => [inputValue, ...cats]);\r\n      setInputValue(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type=\"text\" value={inputValue} onChange={hadleInputChange} />\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired,\r\n};\r\n","export const getGifs = async (category) => {\r\n    const url =\r\n      `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=X5aWamRrr8al6fNAKngZrDlUDwvCBbPE`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map((img) => {\r\n      return {\r\n        id: img.id,\r\n        title: img.title,\r\n        url: img.images?.downsized_medium.url,\r\n      };\r\n    });\r\n\r\n    return gifs; \r\n  };","import React from \"react\";\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n  return (\r\n    <div className=\"card animate__animated animate__pulse\">\r\n      <img src={url} alt={title} />\r\n      <p>{title}</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useFetchGif } from \"../hooks/useFetchGif\";\r\nimport { GifGridItem } from \"./GifGridItem\";\r\n\r\nexport const GifGrid = ({ category }) => {\r\n  const { data: images, loading } = useFetchGif(category);\r\n\r\n  return (\r\n    <>\r\n      <h3>{category}</h3>\r\n      {loading  && <p className= 'animate__animated animate__headShake'>Loading</p> }\r\n      <div className=\"card-grid\">\r\n        {images.map((img) => (\r\n          <GifGridItem key={img.id} {...img} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGif = (category) => {\r\n  const [state, setstate] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category).then((imgs) => {\r\n      \r\n        setstate({\r\n          data: imgs,\r\n          loading: false,\r\n        });\r\n   \r\n    });\r\n  }, [category]);\r\n\r\n  return state;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n// import PropTypes from \"prop-types\";\r\n\r\n// Functional Components\r\n\r\nconst GifExpertApp = () => {\r\n\r\n  const [categories, setCategories] = useState([\"Lilo & Stich\"]);\r\n\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <hr></hr>\r\n      <AddCategory setCategories = {setCategories}/>\r\n      {/* <button onClick={handleAdd}>Agregar</button> */}\r\n      <ol>\r\n        {\r\n        categories.map((category) => (\r\n          <GifGrid \r\n          key = {category}\r\n          category = {category} />\r\n        ))\r\n        \r\n        }\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css'\n\nReactDOM.render(\n\n    <GifExpertApp />,\n\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}